@import url(colors.css);
@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");

:root {
  font-size: 1rem;
  font-family: "Roboto", sans-serif;
  font-weight: 400;
  color: hsl(var(--clr-gray-900));

  --t-speed: 800ms;
  --t-speed-3-4: calc(3 * var(--t-speed-4));
  --t-speed-2: calc(var(--t-speed) / 2);
  --t-speed-4: calc(var(--t-speed) / 4);
  --t-speed-8: calc(var(--t-speed) / 8);
  --br: 0.5rem;

  --gradient-rotation: 135deg;
  --background-gradient: linear-gradient(
    var(--gradient-rotation),
    hsl(var(--clr-primary-500)) 0%,
    hsl(var(--clr-accent-500)) 100%
  );
}

#root {
  overflow: hidden;
  height: 100%;
  display: grid;
  grid-template-rows: 5rem auto 3.5rem;
  grid-template-areas:
    "content"
    "content"
    "navbar";
}

.main {
  position: relative;
  grid-area: content;
  display: flex;
  justify-content: center;
  height: 100%;
  padding: 1.5rem;
  overflow: auto;
  background: hsl(var(--clr-primary-500));
  background: var(--background-gradient);
}

header {
  grid-area: navbar;
  position: relative;
  background: hsl(var(--clr-primary-500));
  text-align: left;
  width: 100%;
  padding: 1rem;
  z-index: 1;
}

nav {
  background: hsl(var(--clr-primary-500));
  opacity: 0.95;
  position: absolute;
  text-align: right;
  right: 0;
  bottom: 100%;
  width: 100%;
  transform: scale(1, 0);
  transform-origin: bottom;
  transition: transform var(--t-speed-3-4) cubic-bezier(0.5, -0.25, 0.5, 1.25) var(--t-speed-4);
}

nav ul {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

form {
  display: flex;
  gap: 2rem;
  flex-direction: column;
  align-items: center;
}

input:-internal-autofill-selected {
  transition: background 5000s linear, color 5000s linear;
}

.content {
  width: clamp(20%, 25rem, 100%);
}

/* ====================================== */
/* Divider */
/* ====================================== */

.divider {
  --color: hsl(var(--clr-gray-100));
  --icon-width: 2.5rem;
  position: relative;
  margin: 1rem 0;
  width: 100%;
  height: 0;
  filter: drop-shadow(0.1rem 0.1rem 0.25rem hsl(var(--clr-gray-900)));
}

.divider > svg {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: var(--icon-width);
  aspect-ratio: 1;
  fill: var(--color);
}

.divider::before {
  --height: 0.1rem;
  content: "";
  position: absolute;
  width: calc(50% - 0.5 * var(--icon-width));
  height: var(--height);
  top: calc(50% - var(--height));
  right: 0;
  background: var(--color);
}

.divider::after {
  --height: 0.1rem;
  content: "";
  position: absolute;
  width: calc(50% - 0.5 * var(--icon-width));
  height: var(--height);
  top: calc(50% - var(--height));
  left: 0;
  background: var(--color);
}

/* ====================================== */
/* Generic Modal Components */
/* ====================================== */

.modal-focus > .modal {
  display: grid;
  grid-template-rows: auto 1fr;
  grid-template-areas:
    "title title close"
    "content content content";

  width: clamp(20%, 400px, calc(100% - 3rem));
  max-height: 500px;
  background: hsl(var(--clr-gray-100) / 0.75);
}

.modal .modal-close {
  --btn-clr: var(--clr-gray-900);
  --btn-clr-hover: var(--clr-danger-500);

  padding: 0;

  cursor: pointer;
  grid-area: close;
  place-self: start end;
  font-size: 2rem;
  transition: color var(--t-speed-2) ease-in-out, transform var(--t-speed-2) ease-in-out;
}

.modal .modal-close:hover,
.modal .modal-close:focus-visible {
  transform: scale(1.2);
}

.modal .modal-content {
  grid-area: content;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

.modal > h1,
.modal > h2 {
  grid-area: title;
  place-self: start start;
}

.modal-focus {
  width: 100%;
  height: 100%;
  display: grid;
  place-items: center;
  transform: translateY(-50%);
  transition: transform var(--t-speed) ease-in-out;
}

.backdrop {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background: #000000e1;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all var(--t-speed-2) ease-in-out;
}

.backdrop.active {
  opacity: 1;
}

.backdrop.active > .modal-focus {
  transform: translateY(0);
}

.backdrop.hidden {
  opacity: 0;
  pointer-events: none;
}

/* ====================================== */
/* Generic Buttons */
/* ====================================== */

.btn,
.btn-outline,
.btn-ghost {
  --btn-clr: var(--clr-gray-100);
  --btn-clr-back: var(--clr-primary-500);
  --btn-clr-hover: var(--btn-clr-back);
  --btn-clr-hover-back: var(--btn-clr);
  position: relative;
  height: fit-content;
  width: fit-content;
  isolation: isolate;
  display: inline-block;
  color: hsl(var(--btn-clr));
  background: hsl(var(--btn-clr-back));
  border-radius: 100vw;
  border: 0;
  outline: 0;
  overflow: hidden;
  padding: 0.5em 1.5em;
  font-family: inherit;
  font-size: 1rem;
  text-decoration: none;
  line-height: inherit;
  cursor: pointer;
  box-shadow: 0em 0.3em 0.4em -0.1em hsl(var(--clr-gray-900) / 0.4);
  transition: color var(--t-speed-2) linear, transform var(--t-speed-8) ease-in-out;
}

.btn-outline {
  background: transparent;
  outline: 0.125em solid hsl(var(--btn-clr));
}

.btn-ghost {
  background: transparent;
  box-shadow: none;
}

.btn.icon {
  display: grid;
  place-items: center;
  padding: 0.25em 1em;
  font-size: 1.25rem;
}

.btn.full-width {
  width: 100%;
}

.btn-danger {
  --btn-clr: var(--clr-gray-100);
  --btn-clr-back: var(--clr-danger-500);
}

.btn-outline.btn-danger {
  --btn-clr: var(--clr-danger-500);
  --btn-clr-back: var(--clr-gray-100);
}

.btn-neutral {
  --btn-clr: var(--clr-primary-500);
  --btn-clr-back: var(--clr-gray-200);
}

.btn-neutral-danger {
  --btn-clr: var(--clr-primary-500);
  --btn-clr-back: var(--clr-gray-200);
  --btn-clr-hover: var(--clr-gray-200);
  --btn-clr-hover-back: var(--clr-danger-500);
}

.btn:hover,
.btn:focus-visible,
.btn-outline:hover,
.btn-outline:focus-visible,
.btn-ghost:hover,
.btn-ghost:focus-visible {
  color: hsl(var(--btn-clr-hover));
}

.btn::after,
.btn-outline::after {
  --transform-origin: right;
  --transform-origin-after: left;
  content: "";
  position: absolute;
  inset: -10px; /*Should really be "inset: 0" but that caused gaps ðŸ¤·*/
  z-index: -1;
  background: hsl(var(--btn-clr-hover-back));
  transform: scale(0, 1);
  transform-origin: var(--transform-origin);
  transition: transform var(--t-speed-4) ease-in-out;
}

.btn:hover::after,
.btn:focus-visible::after,
.btn-outline:hover::after,
.btn-outline:focus-visible::after {
  transform-origin: var(--transform-origin-after);
  transform: scale(1, 1);
}

.btn:active,
.btn-outline:active {
  transform: scale(0.95);
}

.equal-buttons {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.equal-buttons > button {
  width: 100%;
}

/* ====================================== */
/* Generic Card Components */
/* ====================================== */

.card,
.card-fit {
  --card-clr-bg: var(--clr-gray-100);
  --card-clr-txt: var(--clr-gray-800);
  --card-clr-head: var(--clr-gray-900);
  --card-padding: 1.5rem;
  position: relative;
  display: flex;
  gap: 1rem;
  flex-direction: column;
  align-items: center;
  padding: var(--card-padding);
  background: hsl(var(--card-clr-bg) / 0.7);
  color: hsl(var(--card-clr-txt));
  border-radius: var(--br);
  box-shadow: 0rem 0.5rem 1rem 0rem hsla(var(--clr-gray-900) / 0.5);
}

.card.full-width {
  width: 100%;
}

.card h1 {
  color: hsl(var(--card-clr-head));
  text-align: center;
}

.card h2 {
  color: hsl(var(--card-clr-head));
}

.card-fit {
  width: fit-content;
  height: fit-content;
}

.card a {
  position: relative;
  display: inline-block;
  text-decoration: none;
  outline: 0;
  transition: transform var(--t-speed-4) ease-in-out, color var(--t-speed-4) ease-in-out;
}

.card a::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 0.05em;
  background: hsl(var(--clr-primary-500));
  transform: scale(0, 1);
  transform-origin: right;
  transition: transform var(--t-speed-4) ease-in-out;
}

.card a:hover,
.card a:focus-visible {
  transform: scale(1.05);
  color: hsl(var(--clr-primary-500));
}

.card a:hover::after,
.card a:focus-visible::after {
  transform: scale(1, 1);
  transform-origin: left;
}

.card a:active {
  transform: scale(0.95);
}

/* ====================================== */
/* Generic Chart Components */
/* ====================================== */

.chart {
  position: relative;
  max-height: 100%;
  max-width: 100%;
  height: 100%;
  width: 100%;
  display: grid;
  place-items: center;
  margin-bottom: 0.5rem;
}

/* ====================================== */
/* Auth Stuff */
/* ====================================== */
.signout {
  text-transform: inherit;
  font-size: inherit;
  --btn-clr: var(--clr-gray-100);
  --btn-clr-back: var(--clr-primary-500);
}

.auth-btn {
  --btn-clr: var(--clr-gray-100);
  --btn-clr-back: var(--clr-primary-500);
  --btn-clr-hover: var(--clr-gray-100);
  --btn-clr-hover-back: var(--clr-accent-600);
  font-size: 1.25rem;
  box-shadow: 0 0.3em 0.4em 0 hsl(var(--clr-gray-900) / 0.5);
}

.auth-backdrop {
  height: 100vh;
  width: 100vw;
  display: grid;
  place-items: center;
  background: hsl(var(--clr-primary-500));
  background: var(--background-gradient);
}

.auth-box {
  width: clamp(20%, 25rem, 90%);
}

.auth-box p,
.auth-box a {
  font-weight: 300;
  color: hsl(var(--card-clr-txt) / 1);
  margin: 0.5em 0;
}

.auth-box a,
.auth-box a:visited {
  position: relative;
  display: inline-block;
  text-decoration: none;
  color: hsl(var(--clr-primary-500));
  outline: 0;
  transition: transform var(--t-speed-4) ease-in-out;
}

.auth-box a::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 0.05em;
  background: hsl(var(--clr-primary-500));
  transform: scale(0, 1);
  transform-origin: right;
  transition: transform var(--t-speed-4) ease-in-out;
}

.auth-box a:hover,
.auth-box a:focus-visible {
  transform: scale(1.1);
}

.auth-box a:hover::after,
.auth-box a:focus-visible::after {
  transform: scale(1, 1);
  transform-origin: left;
}

.auth-box a:active {
  transform: scale(0.95);
}

.auth-form,
.new-session-form {
  width: 100%;
  font-weight: 300;
}

.new-session-btn {
  --btn-clr: var(--clr-gray-100);
  --btn-clr-back: var(--clr-primary-500);
  --btn-clr-hover: var(--clr-gray-100);
  --btn-clr-hover-back: var(--clr-accent-600);
  font-size: 1.25rem;
  box-shadow: 0 0.3em 0.4em 0 hsl(var(--clr-gray-900) / 0.5);
}

.form-label {
  position: relative;
  width: 100%;
}

.form-label input {
  width: 100%;
  background: transparent;
  color: inherit;
  border: none;
  border-bottom: 0.1em solid hsl(var(--card-clr-txt) / 0.4);
  outline: none;
  padding: 0.5em 0;
  font-size: 1rem;
}

.form-label label {
  position: absolute;
  top: 0;
  left: 0;
  pointer-events: none;
  transform-origin: top left;
  transition: transform var(--t-speed-4) ease-in-out, color var(--t-speed-4) linear;
}

.form-label input:focus-visible ~ label,
.form-label input:valid ~ label,
.form-label input:not(:placeholder-shown) ~ label {
  transform: translateY(-100%) scale(0.9);
  color: hsl(var(--card-clr-accent, var(--clr-primary-500)));
}

.form-label input:not(:placeholder-shown):not(:valid) {
  border-bottom: 0.1em solid hsl(var(--clr-danger-600));
}

.dice-grid {
  --min-width: 100px;
  margin: 0 auto;
  width: 90%;
  display: grid;
  grid-auto-rows: 50px;
  gap: 0.5rem;
  grid-template-columns: repeat(auto-fit, minmax(var(--min-width), 1fr));
}

.dice-stats-grid {
  width: 100%;
  border-collapse: collapse;
}

.grid-item {
  height: 100%;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.dice-box-label,
.dice-btn {
  --btn-clr: var(--clr-primary-500);
  --btn-clr-back: var(--clr-gray-100) / 0.75;
  box-shadow: 0em 0.3em 0.4em -0.1em hsl(var(--clr-gray-900) / 0.4);
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
  font-weight: bold;
  letter-spacing: 0.2ch;
}

.dice-box-label:focus-visible {
  outline: 0.2rem solid hsl(var(--btn-clr) / 0.5);
}

.dice-box-check {
  position: absolute;
  visibility: hidden;
}

.dice-box-check:checked ~ .dice-box-label,
.dice-btn.active {
  color: hsl(var(--btn-clr-hover));
  background: hsl(var(--btn-clr-hover-back));
}

.session-stats-grid {
  height: 100%;
  width: 100%;
  display: grid;
  gap: 1rem;
  grid-template-columns: 1fr 1fr;
  grid-template-areas:
    "title buttons"
    "stats stats";
}

.session-stats-grid > .buttons {
  grid-area: buttons;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 0.5rem;
}

.session-grid {
  height: 100%;
  display: grid;
  gap: 1rem;
  grid-template-columns: 1fr 1fr auto;
  grid-template-rows: 3rem fit-content min-content;
  grid-template-areas:
    "title title end-btn"
    "stats stats stats"
    "dice dice dice";
}

.session-grid > h1,
.session-stats-grid > h1 {
  grid-area: title;
  color: hsl(var(--clr-primary-100));
  text-shadow: 0rem 0.5rem 0.75rem hsl(var(--clr-gray-900) / 0.5);
}

.session-grid > .buttons {
  grid-area: end-btn;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 0.5rem;
}

.session-grid > .card,
.session-stats-grid > .card {
  width: 100%;
  height: fit-content;
}

.session-grid > .stats,
.session-stats-grid > .stats {
  grid-area: stats;
  min-height: 250px;
  height: 100%;
}

.stats > .stat-selection {
  width: calc(100% - 2rem);
  padding: 0.25rem 0rem;
  color: inherit;
  font-size: 1rem;
  border: none;
  border-bottom: 1px solid hsl(var(--clr-gray-800) / 0.8);
  background: transparent;
}

.stats > .stat-selection > option {
  background: hsl(var(--clr-gray-100));
}

.stats > .dice-grid {
  --min-width: 10ch;
  grid-auto-rows: auto;
  display: none;
}

.stats > .dice-grid > button {
  height: fit-content;
  font-size: 0.75rem;
}

.session-grid > .dice-picker {
  grid-area: dice;
}

.session-grid .dice-picker .dice-btn,
.dice-modal .dice-btn {
  --btn-clr: var(--clr-gray-100);
  --btn-clr-back: var(--clr-primary-500);
  --btn-clr-hover: var(--clr-gray-100);
  --btn-clr-hover-back: var(--clr-accent-600);
}

.dice-modal > .dice-grid {
  grid-area: content;
  place-self: center center;
  overflow: auto;
  max-height: 100%;
  padding-bottom: 2rem;
}

.dice-modal > .dice-grid::-webkit-scrollbar {
  width: 1rem;
}

.dice-modal > .dice-grid::-webkit-scrollbar-track,
.dice-modal > .dice-grid::-webkit-scrollbar-thumb {
  border: 0.25rem solid transparent;
  background-clip: padding-box;
  border-radius: 100vw;
}

.dice-modal > .dice-grid::-webkit-scrollbar-track {
  background-color: hsl(var(--clr-gray-900) / 0.1);
}

.dice-modal > .dice-grid::-webkit-scrollbar-thumb {
  background-color: hsl(var(--clr-primary-500) / 0.9);
}

/* ====================================== */
/* Dashboard */
/* ====================================== */

.dashboard {
  display: grid;
  gap: 1rem;
  grid-template-rows: auto min-content auto;
  grid-template-areas:
    "current"
    "stats"
    "session-list";
}

.dashboard > .divider {
  display: none;
}

.dashboard > .stats {
  grid-area: stats;
  overflow: hidden;
  min-height: 50vh;
}

.session-list {
  grid-area: session-list;
  direction: ltr;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  flex-direction: column;
  gap: 1rem;
  padding-bottom: 1rem;
}

.session-list::-webkit-scrollbar {
  width: 1rem;
}

.session-list::-webkit-scrollbar-track,
.session-list::-webkit-scrollbar-thumb {
  border: 0.25rem solid transparent;
  background-clip: padding-box;
  border-radius: 100vw;
}

.session-list::-webkit-scrollbar-track {
  background-color: hsl(var(--clr-gray-100) / 0.3);
}

.session-list::-webkit-scrollbar-thumb {
  background-color: hsl(var(--clr-primary-700) / 0.9);
}

.dashboard > .current-session {
  grid-area: current;
  background: hsl(var(--clr-primary-200) / 0.7);
}

.dashboard > .current-replacer {
  grid-area: current;
}

/* ====================================== */
/* Session Preview */
/* ====================================== */
.session-preview {
  --card-padding: 1.25rem;
  width: 100%;
  max-width: 100%;
  transition: transform var(--t-speed-4) ease-out;
  hyphens: auto;

  display: grid;
  gap: 0;
  grid-template-areas:
    "name name rolls"
    "game ... date";
}
.session-preview > * {
  max-width: 100%;
  min-width: 0;
}

.session-preview > h1 {
  grid-area: name;
  justify-self: start;
  align-self: center;
  text-align: left;
  overflow-wrap: anywhere;
  hyphens: auto;
}
.session-preview > .rolls {
  grid-area: rolls;
  justify-self: end;
  align-self: start;

  display: flex;
  align-items: center;

  font-size: 0.9rem;
}
.rolls > .svg-container {
  --fill-clr: black;
  width: 2.5rem;

  display: grid;
  place-content: center;
  filter: none;
}
.rolls > .num {
  font-size: 1.1rem;
  font-weight: 500;
  margin-right: 0.25ch;
  margin-left: -0.25ch;
}

.session-preview > .game {
  grid-area: game;
  justify-self: start;
  align-self: start;

  font-size: 0.9rem;
  font-style: italic;
}
.session-preview > .date {
  grid-area: date;
  justify-self: end;
  align-self: start;

  font-size: 0.9rem;
  font-style: italic;
}

.session-preview:hover,
.session-preview:focus-within {
  transform: scale(1.05);
}

.session-preview::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: var(--br);
  opacity: 0;
  box-shadow: 0.25rem 1.5rem 1.5rem -0.25rem hsla(var(--clr-gray-900) / 0.3);
  transition: opacity var(--t-speed-4) ease-out;
}

.session-preview:hover::before {
  opacity: 1;
}

.preview-content {
  width: 100%;
  display: grid;
  gap: 1rem;
  grid-template-columns: 1fr 1fr 1fr;
}

.preview-content > .left {
  justify-self: start;
}

.preview-content > .center {
  justify-self: center;
}

.preview-content > .right {
  justify-self: end;
}

/* ====================================== */
/* Floating Text */
/* ====================================== */

.floating-text {
  color: hsl(var(--clr-primary-100));
  text-shadow: 0rem 0.5rem 0.75rem hsl(var(--clr-gray-900) / 0.5);
}

.floating-text a,
.floating-text a:visited {
  position: relative;
  display: inline-block;
  color: hsl(var(--clr-accent-300));
  text-decoration: none;
  font-weight: 300;
  outline: 0;
  transition: transform var(--t-speed-4) ease-in-out, color var(--t-speed-4) ease-in-out;
}

.floating-text a::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 0.05em;
  background: hsl(var(--clr-accent-300));
  transform: scale(0, 1);
  transform-origin: right;
  transition: transform var(--t-speed-4) ease-in-out;
}

.floating-text a:hover,
.floating-text a:focus-visible {
  transform: scale(1.025);
}

.floating-text a:hover::after,
.floating-text a:focus-visible::after {
  transform: scale(1, 1);
  transform-origin: left;
}

.floating-text a:active {
  transform: scale(0.95);
}

/* ====================================== */
/* Alerts */
/* ====================================== */

.alert-box {
  --box-clr: var(--clr-primary-800);
  --box-clr-back: var(--clr-primary-200);

  position: relative;
  width: 100%;
  padding: 1em 1em;
  margin-bottom: 1em;
  border-radius: var(--br);
  background: hsl(var(--box-clr-back) / 0.4);
  color: hsl(var(--box-clr));
  font-weight: 300;
  transition: transform var(--t-speed-8) ease-in var(--t-speed-8), max-height 100ms linear,
    padding 100ms linear;
  transform-origin: left;
  overflow: hidden;
}

.alert-box::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 0.5em;
  background: hsl(var(--box-clr) / 0.8);
  border-radius: var(--br);
}

.alert-box.disabled {
  display: none;
  transform: scale(0, 1);
  max-height: 0;
  padding: 0;
  transition: transform var(--t-speed-8) ease-in,
    max-height var(--t-speed-8) linear var(--t-speed-8),
    padding var(--t-speed-8) linear var(--t-speed-8);
}

.alert-box.error {
  --box-clr: var(--clr-danger-700);
  --box-clr-back: var(--clr-danger-200);
}

.alert-box.success {
  --box-clr: var(--clr-success-800);
  --box-clr-back: var(--clr-success-100);
}

/* ====================================== */
/* Navigation related components */
/* ====================================== */

.nav-item {
  margin: 1rem;
  color: hsl(var(--clr-gray-100));
  text-decoration: none;
  text-transform: uppercase;
  font-size: 1.25em;
  opacity: 0;
  transition: opacity var(--t-speed-4) ease-in-out;
}

.nav-link,
.nav-link:visited {
  color: inherit;
  text-decoration: none;
  transition: color var(--t-speed-4) ease-in-out;
}

.nav-link:hover,
.nav-link:focus-visible,
.nav-link.active {
  color: hsl(var(--clr-accent-100));
}

.nav-toggle {
  display: none;
}

.nav-toggle:checked ~ nav {
  transform: scale(1);
}

.nav-toggle:checked ~ nav .nav-item {
  opacity: 1;
  transition: opacity var(--t-speed-4) ease-in-out var(--t-speed-3-4);
}

.nav-toggle-label {
  position: absolute;
  bottom: 0;
  right: 0;
  margin-right: 1rem;
  height: 100%;
  display: flex;
  align-items: center;
  cursor: pointer;
}

.logo {
  display: flex;

  height: 100%;
  width: fit-content;
  overflow: hidden;

  margin: auto 0;

  color: hsl(var(--clr-gray-100));
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 0.2ch;
  text-decoration: none;
  font-size: 1.5em;
}

.logo:visited {
  color: hsl(var(--clr-gray-100));
}

.svg-container {
  --fill-clr: hsl(var(--clr-gray-100));

  position: static;
  height: 100%;
  max-width: 100%;
  color: inherit;
  filter: drop-shadow(0.2rem 0.2rem 0.2rem hsl(var(--clr-gray-900)));
}

.svg-container svg {
  width: 100%;
  height: 100%;
  fill: var(--fill-clr);
}

.svg-container.desktop {
  display: none;
}

/* ====================================== */
/* Settings */
/* ====================================== */

.settings {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: center;
}

.sort-select {
  width: calc(100% - 2rem);
  padding: 0.25rem 0rem;
  color: inherit;
  font-size: 1rem;
  border: none;
  border-bottom: 1px solid hsl(var(--clr-gray-800) / 0.8);
  background: transparent;
}

.sort-select > option {
  background: hsl(var(--clr-gray-100));
}

/* ====================================== */
/* Media Queries for Desktop Version */
/* ====================================== */

@media screen and (min-width: 55rem) {
  :root {
    --gradient-rotation: 45deg;
  }

  #root {
    grid-template-areas:
      "navbar"
      "content"
      "content";
  }

  .svg-container.desktop {
    display: block;
  }

  .svg-container.mobile {
    display: none;
  }

  .main {
    padding: 1.5rem 3.5rem;
  }

  .dashboard {
    width: 100%;
    grid-template-columns: auto 1fr 3.5fr;
    grid-template-rows: auto auto 1fr;
    grid-template-areas:
      "... current stats"
      "... divider stats"
      "session-list session-list stats";
  }

  .dashboard > .divider {
    display: block;
    grid-area: divider;
    margin: 1rem 0 0.5rem 0;
  }

  .session-list {
    --offset: 1rem;
    direction: rtl;
    overflow-y: auto;
    overflow-x: hidden;
    scrollbar-gutter: stable;
    width: calc(100% + 2 * var(--offset));
    padding: 0rem var(--offset);
    padding-top: calc(0.5 * var(--offset));
    transform: translateX(calc(-1 * var(--offset)));
  }

  .session-list > * {
    direction: ltr;
  }

  .session-grid {
    width: 100%;
    grid-template-columns: 1rem min-content 1fr auto 1rem;
    grid-template-rows: 3rem 1fr 1fr;
    grid-template-areas:
      "... title title end-btn ..."
      "... dice stats stats ..."
      "... dice stats stats ...";
  }

  .session-stats-grid {
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-areas:
      "title title buttons"
      "stats stats stats";
  }

  .stats > .dice-grid {
    display: grid;
  }

  .stats > .stat-selection {
    display: none;
  }

  .nav-toggle-label {
    display: none;
  }

  header {
    display: grid;
    gap: 0rem;
    grid-template-columns: 2rem auto auto 2rem;
    padding: 1rem 1.5rem;
  }

  .logo {
    grid-column: 2 / span 1;
  }

  nav {
    all: unset;
    grid-column: 3 / span 1;
    place-self: center end;
  }

  .nav-item {
    opacity: 1;
    margin: 0 0 0 1em;
    position: relative;
  }

  .nav-link::before {
    content: "";
    position: absolute;
    background: hsl(var(--clr-accent-100));
    height: 0.2em;
    width: 100%;
    top: -1.3em;
    transform: scale(0, 1);
    transform-origin: top left;
    transition: transform var(--t-speed-4) ease-in-out;
  }

  .nav-link:hover::before,
  .nav-link:focus-visible::before,
  .nav-link.active::before {
    transform: scale(1);
  }

  nav ul {
    display: flex;
    justify-content: flex-end;
    align-items: center;
  }
}

/* ====================================== */
/* Burger Menu with Animation :) */
/* ====================================== */

.nav-toggle-label span,
.nav-toggle-label span::before,
.nav-toggle-label span::after {
  background-color: hsl(var(--clr-gray-100));
  display: block;
  height: 0.2em;
  width: 1.8em;
  border-radius: 0.2em;
  position: relative;
  transition: all var(--t-speed) cubic-bezier(0.5, -0.4, 0.5, 1.4);
}

.nav-toggle-label span::before,
.nav-toggle-label span::after {
  content: "";
  position: absolute;
}

.nav-toggle-label span::before {
  transform: translateY(200%);
}

.nav-toggle-label span::after {
  transform: translateY(-200%);
}

.nav-toggle:checked ~ .nav-toggle-label span::before {
  transform: rotate(90deg);
}

.nav-toggle:checked ~ .nav-toggle-label span::after {
  transform: rotate(180deg);
  opacity: 0;
}

.nav-toggle:checked ~ .nav-toggle-label span {
  transform: rotate(225deg);
}
